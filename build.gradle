import org.apache.tools.ant.filters.ReplaceTokens

ext {
    teamCityVersion = '9.0.1'
    localProperties = new Properties()
    localProperties.load(new FileInputStream("${rootDir}/local.properties"))
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    group = 'ru.mail.teamcity'
    version = '1.0'

    configurations {
        provided
    }

    sourceSets {
        main { compileClasspath += [configurations.provided] }
    }

    idea {
        module {
            scopes.PROVIDED.plus += [configurations.provided]
        }
    }

    repositories {
        mavenCentral()
        maven {
            url "http://repository.jetbrains.com/all"
        }
    }
}

project(':teamcity-web-ssh-server') {
    dependencies {
        provided "org.jetbrains.teamcity:server-api:$teamCityVersion"
        provided "org.jetbrains.teamcity:server-web-api:$teamCityVersion"
        testRuntime "org.jetbrains.teamcity:tests-support:$teamCityVersion"

        provided "org.atmosphere:atmosphere-runtime:2.2.4"
        compile "com.jcraft:jsch:0.1.52"
        compile "com.google.code.gson:gson:2.3.1"
    }

    task createPluginBundle(type: Zip, dependsOn: build) {
        from("${rootDir}/teamcity-plugin.xml") {
            filter(ReplaceTokens, tokens: [Version: project.version])
        }

        from(jar) {
            into 'server'
        }

        configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each {
            it.allModuleArtifacts.each {
                from(it.getFile().getPath()) {
                    into 'server'
                }
            }
        }
    }

    task copyPluginBundle(type: Copy, dependsOn: createPluginBundle) {
        def teamcityDataPath = localProperties.get("teamcityDataPath")
        if (null == teamcityDataPath) {
            logger.error('Please, configure location of Teamcity data directory.')
            return
        }

        from "${buildDir}/distributions"
        into "${teamcityDataPath}/plugins"
        include "*.zip"
    }
}

dependencies {
    compile project(':teamcity-web-ssh-server')
}
